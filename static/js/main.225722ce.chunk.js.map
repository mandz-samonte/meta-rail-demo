{"version":3,"sources":["reportWebVitals.js","routes/MainRouter.js","components/Card.js","components/Tag.js","components/CustomScrollPane.js","pages/dashboard/Navbar.js","pages/dashboard/Sidebar.js","pages/dashboard/DashboardCard.js","pages/dashboard/key-metrics/DoughnutChart.js","pages/dashboard/key-metrics/LineChart.js","pages/dashboard/key-metrics/KeyMetrics.js","pages/dashboard/map-view/MapView.js","pages/dashboard/performance-metrics/Widget.js","pages/dashboard/performance-metrics/index.js","pages/dashboard/campaign-metrics/Widget.js","pages/dashboard/campaign-metrics/index.js","pages/dashboard/index.js","routes/admin/dashboard.js","routes/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ParentComponents","routes","map","route","key","exact","path","render","url","match","ChildComponents","children","console","log","process","component","MainRouter","basename","Card","className","classNames","Tag","CustomScrollPane","id","useState","value","setValue","scroll","panel","document","getElementById","scrollTop","total","scrollHeight","offsetHeight","useEffect","addEventListener","onChange","e","target","percentage","type","Navbar","date_today","Date","toISOString","slice","last_seven_days","moment","subtract","format","width","height","color","to","INDUSTRIES","label","link","VERTICALS","Sidebar","industry","minValue","maxValue","styles","heigh","stroke","strokeLinecap","href","DashboardCard","title","icons","icon","size","DoughnutChart","labels","data","date","datasets","sales","backgroundColor","hoverBackgroundColor","hoverBorderWidth","options","legend","display","tooltips","enabled","responsive","maintainAspectRatio","rotation","Math","PI","circumference","LineChart","fill","borderColor","borderWidth","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","scales","yAxes","ticks","min","max","stepSize","minor","fontColor","gridLines","drawOnChartArea","xAxes","source","time","unit","distribution","DOUGHNUT_CHART_TITLES","SAMPLE_DATA","startDate","endDate","lastGeneratedDate","dates","currentDate","toDateString","randomDate","getTime","random","push","generateDates","floor","cogs","margin","clicks","impressions","KeyMetrics","params","gradient","setGradient","selectedValue","setSelectedValue","getContext","createLinearGradient","addColorStop","values","forEach","setAdSpendTotals","adSpends","onClick","toLowerCase","MapView","Widget","description","positive","percent","PerformanceMetrics","CampaignMetrics","Dashboard","name","Admin","Routes","library","add","fas","far","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.225722ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n\nfunction ParentComponents({ routes }) {\n  return routes.map((route, key) => (\n    <Route\n      key={key}\n      exact={route.exact}\n      path={route.path}\n      render={({ match: { url }}) => <ChildComponents url={url} routes={route.children} />}\n    />\n  ))\n}\n\nfunction ChildComponents({ routes, url }) {\n  console.log(process.env.PUBLIC_URL + url);\n\n  if(url === '/') url = '';\n\n  return routes.map((route, key) => (\n    <Route\n      key={key}\n      exact={route.exact}\n      path={`${process.env.PUBLIC_URL + url + route.path}`}\n      component={route.component}\n    />\n  ))\n}\n\nfunction MainRouter({ routes }) {\n  console.log(process.env.PUBLIC_URL);\n\n  return (\n    <div>\n      <Router\n        basename={process.env.PUBLIC_URL}\n      >\n        <Switch>\n          <ParentComponents\n            routes={routes}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default MainRouter;\n","import classNames from 'classnames';\n\nfunction Card({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('card', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Card;\n","import classNames from 'classnames';\n\nfunction Tag({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('tag', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Tag;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nfunction CustomScrollPane({\n  children,\n  className,\n  id = 'scroll-pane-container',\n}) {\n  const [value, setValue] = useState('');\n\n  function onChange(e) {\n    setValue(e.target.value);\n\n    var panel = document.getElementById(id);\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = total * (e.target.value/100);\n\n    panel.scrollTop = percentage;\n  }\n\n  function scroll() {\n    var panel = document.getElementById(id);\n\n    var scrollTop = panel.scrollTop;\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = (scrollTop / total) * 100;\n\n    setValue(percentage);\n  }\n\n  useEffect(() => {\n    var panel = document.getElementById(id);\n\n    panel.addEventListener('scroll', scroll);\n\n    setValue(panel.scrollTop);\n  }, []);\n\n  return (\n    <div className={classNames('custom-scroll-pane', className)}>\n      <div id={id} className=\"scroll-pane-container\">\n        { children }\n      </div>\n\n      <input\n        onChange={onChange}\n        value={value}\n        className=\"custom-scrollbar\"\n        type=\"range\"\n      />\n    </div>\n  )\n}\n\nexport default CustomScrollPane;\n","import { useState, useEffect } from 'react';\nimport { Card } from '../../components';\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction Navbar() {\n\n  const date_today = new Date().toISOString().slice(0,10);\n\n  const last_seven_days = moment().subtract(7, 'days').format('YYYY-MM-DD');\n\n  return (\n    <div className=\"navbar\">\n      <Card className=\"nav-logo\">\n        <h2>MetaRail</h2>\n        <span>Insights</span>\n\n        <Loader\n          className=\"loader\"\n          type=\"Oval\"\n          width={40}\n          height={40}\n          color=\"#36a2eb\"\n        />\n      </Card>\n\n      <Card className=\"nav-filter\">\n        <Link to={`/admin/dashboard/&date_from=${date_today}&date_to=${date_today}`}>Today</Link>\n        <Link to={`/admin/dashboard/&date_from=${last_seven_days}&date_to=${date_today}`}>Last 7 Days</Link>\n        <Link to=\"/admin/dashboard\">Custom</Link>\n      </Card>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import { Card, Tag, CustomScrollPane } from '../../components';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst INDUSTRIES = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Insurance',\n    link: '/'\n  },\n  {\n    label: 'Travel',\n    link: '/'\n  },\n  {\n    label: 'Education',\n    link: '/'\n  },\n  {\n    label: 'Finance',\n    link: '/'\n  },\n  {\n    label: 'Media & Communications',\n    link: '/'\n  },\n  {\n    label: 'Apparel',\n    link: '/'\n  }\n]\n\nconst VERTICALS = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Health',\n    link: '/'\n  },\n  {\n    label: 'Life',\n    link: '/'\n  },\n  {\n    label: 'Auto',\n    link: '/'\n  },\n  {\n    label: 'Property',\n    link: '/'\n  }\n]\n\nfunction Sidebar() {\n  return (\n    <Card className=\"sidebar\">\n      <div className=\"user-info\">\n        <span>Sample Full Name</span>\n        <div className=\"user-type\">\n          <Tag>Admin</Tag>\n          <Tag>Advertiser</Tag>\n          <Tag>Publisher</Tag>\n        </div>\n      </div>\n\n      <div className=\"sidebar-filters\">\n        <span className=\"category-title\">Industries</span>\n          <CustomScrollPane id=\"industries\">\n            {\n              INDUSTRIES.map((industry, key) => (\n                <span key={key}>{ industry.label }</span>\n              ))\n            }\n          </CustomScrollPane>\n        <span className=\"category-title\">Verticals</span>\n          <CustomScrollPane id=\"verticals\">\n            {\n              VERTICALS.map((industry, key) => (\n                <span key={key}>{ industry.label }</span>\n              ))\n            }\n          </CustomScrollPane>\n        <div className=\"campaigns-container\">\n          <span className=\"category-title\">Campaigns</span>\n\n          <div className=\"campaigns\">\n            <Tag>All</Tag>\n            <Tag>Active</Tag>\n            <Tag>InActive</Tag>\n            <Tag>Expiring in 30 days</Tag>\n            <Tag>Don't Expire</Tag>\n            <Tag>All</Tag>\n            <Tag>All</Tag>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"currency-balance\">\n        <Card>\n          <div className=\"body\">\n            <div className=\"graph\">\n              <CircularProgressbar\n                value={10}\n                minValue={0}\n                maxValue={100}\n                styles={{\n                  width: 25,\n                  heigh: 25,\n                  path: {\n                    stroke: 'rgba(255, 115, 115, 100)',\n                    strokeLinecap: 'butt'\n                  }\n                }}\n              />\n            </div>\n            <div className=\"balance\">\n              <span>Current Balance</span>\n\n              <h3>$0</h3>\n\n              <a href=\"/\">Prepay</a>\n            </div>\n          </div>\n\n          <span className=\"message\">Low Credit Alert. Prepay Now</span>\n        </Card>\n      </div>\n    </Card>\n  )\n}\n\nexport default Sidebar;\n","import { Card } from '../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DashboardCard({\n  children,\n  title,\n  className,\n  icons = []\n}) {\n  return (\n    <Card className={className}>\n      <div className=\"card-header\">\n        <span className=\"card-header-title\">\n          { title }\n        </span>\n\n        <div className=\"card-header-actions\">\n          {\n            icons.map((icon, key) => (\n              <FontAwesomeIcon\n                key={key}\n                className=\"card-header-icon\"\n                size=\"xs\"\n                icon={icon}\n              />\n            ))\n          }\n        </div>\n      </div>\n\n      {children}\n    </Card>\n  )\n}\n\nexport default DashboardCard;\n","import { Doughnut } from 'react-chartjs-2';\n\nfunction DoughnutChart({\n  title,\n  labels = [],\n  data = []\n}) {\n  return (\n    <div className=\"doughnut-chart\">\n      <div className=\"doughnut\">\n        <Doughnut\n          data={{\n            labels: labels.map(data => data.date),\n            datasets: [{\n              data: data.map(data => data.sales),\n              backgroundColor: 'rgba(255, 115, 115, 0.5)',\n              hoverBackgroundColor: 'rgba(255, 115, 115, 1)',\n              hoverBorderWidth: 0,\n            }]\n          }}\n          options={{\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false,\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n            rotation: 1 * Math.PI,\n            circumference: 1 * Math.PI\n          }}\n        />\n      </div>\n\n      <span className=\"doughnut-title\">{ title }</span>\n      <div className=\"breakdowns\">\n        <span>$47.00 - MR-PUB-Dev2020</span>\n      </div>\n    </div>\n  )\n}\n\nexport default DoughnutChart;\n","import { Line } from 'react-chartjs-2';\n\nfunction LineChart({\n  labels,\n  data,\n  color\n}) {\n  return (\n    <Line\n      id=\"key-metrics-line-chart\"\n      height={30}\n      width={100}\n      data={{\n        labels: labels,\n        datasets: [{\n          fill: 'start',\n          data: data,\n          backgroundColor: color,\n          borderColor: 'rgba(54, 162, 235, 100)',\n          borderWidth: 5,\n          pointRadius: 10,\n          pointHoverRadius: 10,\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: color\n        }]\n      }}\n      options={{\n        legend: {\n          display: false,\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 100,\n              stepSize: 20,\n              minor: {\n                fontColor: '#d6d6d6'\n              }\n            },\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              source: 'labels',\n              minor: {\n                fontColor: '#d6d6d6'\n              }\n            },\n            type: 'time',\n            time: {\n              unit: 'day',\n            },\n            distribution: 'series',\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }}\n    />\n  )\n}\n\nexport default LineChart;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport moment from 'moment';\n\nimport DashboardCard from '../DashboardCard';\nimport DoughnutChart from './DoughnutChart';\nimport LineChart from './LineChart';\n\nconst DOUGHNUT_CHART_TITLES = ['Revenue by Publishers', 'Spend by Advertiser', 'By Industry', 'By Vertical'];\n\nconst SAMPLE_DATA = generateDates(new Date(moment().subtract(30, 'days').format('YYYY-MM-DD')), new Date()).map((date) => {\n  return {\n    date: date,\n    sales: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    cogs: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    margin: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    clicks: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    impressions: Math.floor(Math.random() * (100 - 1 + 1) + 1)\n  }\n})\n\nfunction generateDates(startDate, endDate) {\n  let dates = [];\n  let currentDate = startDate;\n  let lastGeneratedDate;\n\n  while(new Date(currentDate).toDateString() !== new Date(endDate).toDateString()) {\n    let randomDate = new Date(currentDate.getTime() + Math.random() * (endDate.getTime() - currentDate.getTime()));\n\n    if(new Date(randomDate).toDateString() !== new Date(lastGeneratedDate).toDateString()) {\n      dates.push(randomDate);\n    }\n\n    currentDate = randomDate;\n    lastGeneratedDate = randomDate\n  }\n\n  return dates;\n}\n\nfunction KeyMetrics({ params }) {\n  const [gradient, setGradient] = useState('');\n  const [selectedValue, setSelectedValue] = useState('sales');\n\n  function setAdSpendTotals() {\n    let values = [\n      {\n        label: 'Sales',\n        total: 0\n      },\n      {\n        label: 'CoGS',\n        total: 0\n      },\n      {\n        label: 'Margin',\n        total: 0\n      },\n      {\n        label: 'Clicks',\n        total: 0\n      },\n      {\n        label: 'Impressions',\n        total: 0\n      }\n    ]\n\n    SAMPLE_DATA.forEach(data => {\n      values[0].total += data.sales;\n      values[1].total += data.cogs;\n      values[2].total += data.margin;\n      values[3].total += data.clicks;\n      values[4].total += data.impressions;\n    })\n\n    return values;\n  }\n\n  useEffect(() => {\n    const chart = document.getElementById('key-metrics-line-chart').getContext('2d');\n    var gradient = chart.createLinearGradient(0, 0, 300, 300);\n    gradient.addColorStop(0, '#009348');\n    gradient.addColorStop(1, '#00d4ff');\n\n    setGradient(gradient);\n  }, []);\n\n  return (\n    <DashboardCard\n      className=\"key-metrics\"\n      title=\"Key Metrics\"\n      icons={['info', 'sync-alt', 'cog', 'expand-arrows-alt']}\n    >\n      <LineChart\n        labels={SAMPLE_DATA.map(data => data.date)}\n        data={SAMPLE_DATA.map(data => data[selectedValue])}\n        color={gradient}\n      />\n\n      <div className=\"ad-spends\">\n        {\n          setAdSpendTotals().map((adSpends, key) => (\n            <span\n              className=\"ad-spend\"\n              onClick={() => setSelectedValue(adSpends.label.toLowerCase())}\n            >\n              <span>{ key < 3 && '$'}{adSpends.total}</span>\n              <p>{adSpends.label}</p>\n            </span>\n          ))\n        }\n      </div>\n\n      <div className=\"doughnut-charts\">\n        {\n          DOUGHNUT_CHART_TITLES.map((title, key) => (\n            <DoughnutChart\n              title={title}\n              data={SAMPLE_DATA}\n            />\n          ))\n        }\n      </div>\n\n      <div className=\"key-metrics-footer\">\n        <span className=\"show-all\">Show All Publishers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Advertisers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Industries <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Verticals <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default KeyMetrics;\n","import DashboardCard from '../DashboardCard';\n\nfunction MapView() {\n  return (\n    <DashboardCard\n      className=\"map-view\"\n      title=\"Map View\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n    </DashboardCard>\n  )\n}\n\nexport default MapView;\n","import { Card } from '../../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  description,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className=\"widget\">\n      <span className=\"widget-title\">\n        { title }\n        <div className=\"pmNA\">NA</div>\n      </span>\n\n\n      <div className=\"widget-body\">\n        <span className=\"value\">\n          <span className={positive ? 'positive' : 'negative'}>{ percent }%</span>\n            |\n          <span>${ value }</span>\n        </span>\n\n        <div>\n          <FontAwesomeIcon\n            className={positive ? 'positive' : 'negative'}\n            icon={positive ? 'arrow-alt-circle-up' : 'arrow-alt-circle-down'}\n            size=\"2x\"\n          />\n        </div>\n      </div>\n\n      <span className=\"widget-description\">\n        { description }\n      </span>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction PerformanceMetrics() {\n  return (\n    <DashboardCard\n      className=\"performance-metrics\"\n      title=\"Performance Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"performance-metrics-body\">\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default PerformanceMetrics;\n","import { Card } from '../../../components';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className={classNames('widget', { 'bottom-border-positive': positive, 'bottom-border-negative': !positive })}>\n      <div className=\"widget-title\">\n        <span>{ title }</span>\n\n        <span className={ positive ? 'positive' : 'negative' }>\n          <FontAwesomeIcon icon={ positive ? 'chevron-up' : 'chevron-down' } />\n          { percent }%\n        </span>\n      </div>\n\n      <div className=\"widget-body\">\n        <FontAwesomeIcon\n          className={ positive ? 'positive' : 'negative'}\n          icon={ positive ? 'chevron-up' : 'chevron-down' }\n        />\n        ${ value }\n      </div>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction CampaignMetrics() {\n  return (\n    <DashboardCard\n      className=\"campaign-metrics\"\n      title=\"Campaign Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"campaign-metrics-body\">\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default CampaignMetrics;\n","import Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport KeyMetrics from './key-metrics/KeyMetrics';\nimport MapView from './map-view/MapView';\nimport PerformanceMetrics from './performance-metrics';\nimport CampaignMetrics from './campaign-metrics';\n\nfunction Dashboard({ match }) {\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-container\">\n        <Navbar />\n        <Sidebar />\n        <KeyMetrics\n          params={match.params}\n        />\n        <MapView />\n        <PerformanceMetrics />\n        <CampaignMetrics />\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;\n","import Dashboard from '../../pages/dashboard';\n\nconst routes = () => {\n  return [\n    {\n      path: '/dashboard',\n      exact: true,\n      component: Dashboard\n    },\n    {\n      path: '/dashboard/&date_from=:date_from&date_to=:date_to',\n      exact: true,\n      component: Dashboard\n    }\n  ]\n}\n\nexport default routes;\n","import MainRouter from './MainRouter';\n\nimport * as Admin from './admin';\n\nconst routes = [\n  {\n    name: 'main',\n    path: '/',\n    children: []\n  },\n  {\n    name: 'admin',\n    path: '/admin',\n    children: [\n      ...Admin.Dashboard(),\n    ]\n  }\n]\n\nconst Routes = () => <MainRouter routes={routes} />\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/styles.scss';\nimport reportWebVitals from './reportWebVitals';\n\nimport MainRouter from './routes';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(fas, far)\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}