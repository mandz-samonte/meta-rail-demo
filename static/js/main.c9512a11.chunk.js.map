{"version":3,"sources":["components/Card.js","components/Tag.js","components/CustomScrollPane.js","pages/dashboard/Navbar.js","pages/dashboard/Sidebar.js","pages/dashboard/DashboardCard.js","pages/dashboard/key-metrics/KeyMetrics.js","pages/dashboard/map-view/MapView.js","pages/dashboard/performance-metrics/Widget.js","pages/dashboard/performance-metrics/index.js","pages/dashboard/campaign-metrics/Widget.js","pages/dashboard/campaign-metrics/index.js","pages/dashboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","children","className","classNames","Tag","CustomScrollPane","id","useState","value","setValue","scroll","panel","document","getElementById","scrollTop","total","scrollHeight","offsetHeight","useEffect","addEventListener","onChange","e","target","percentage","type","Navbar","INDUSTRIES","label","link","VERTICALS","Sidebar","map","industry","key","minValue","maxValue","styles","width","heigh","path","stroke","strokeLinecap","href","DashboardCard","title","icons","icon","size","SAMPLE_DATA","KeyMetricsDoughnutChart","data","options","legend","display","responsive","maintainAspectRatio","rotation","Math","PI","circumference","KeyMetrics","gradient","setGradient","getContext","createLinearGradient","addColorStop","height","labels","datasets","fill","backgroundColor","borderColor","borderWidth","scales","yAxes","ticks","min","max","stepSize","MapView","Widget","description","positive","percent","PerformanceMetrics","CampaignMetrics","Dashboard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","far","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9512a11.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nfunction Card({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('card', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Card;\n","import classNames from 'classnames';\n\nfunction Tag({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('tag', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Tag;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nfunction CustomScrollPane({\n  children,\n  className,\n  id = 'scroll-pane-container',\n}) {\n  const [value, setValue] = useState('');\n\n  function onChange(e) {\n    setValue(e.target.value);\n\n    var panel = document.getElementById(id);\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = total * (e.target.value/100);\n\n    panel.scrollTop = percentage;\n  }\n\n  function scroll() {\n    var panel = document.getElementById(id);\n\n    var scrollTop = panel.scrollTop;\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = (scrollTop / total) * 100;\n\n    setValue(percentage);\n  }\n\n  useEffect(() => {\n    var panel = document.getElementById(id);\n\n    panel.addEventListener('scroll', scroll);\n\n    setValue(panel.scrollTop);\n  }, []);\n\n  return (\n    <div className={classNames('custom-scroll-pane', className)}>\n      <div id={id} className=\"scroll-pane-container\">\n        { children }\n      </div>\n\n      <input\n        onChange={onChange}\n        value={value}\n        className=\"custom-scrollbar\"\n        type=\"range\"\n      />\n    </div>\n  )\n}\n\nexport default CustomScrollPane;\n","import { Card } from '../../components';\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <Card className=\"nav-logo\">\n        <h2>MetaRail</h2>\n\n        <span>Insights</span>\n      </Card>\n\n      <Card className=\"nav-filter\">\n        <ul>\n          <li>Today</li>\n          <li>Last 7 Days</li>\n          <li>Custom</li>\n        </ul>\n      </Card>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import { Card, Tag, CustomScrollPane } from '../../components';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst INDUSTRIES = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Insurance',\n    link: '/'\n  },\n  {\n    label: 'Travel',\n    link: '/'\n  },\n  {\n    label: 'Education',\n    link: '/'\n  },\n  {\n    label: 'Finance',\n    link: '/'\n  },\n  {\n    label: 'Media & Communications',\n    link: '/'\n  },\n  {\n    label: 'Apparel',\n    link: '/'\n  }\n]\n\nconst VERTICALS = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Health',\n    link: '/'\n  },\n  {\n    label: 'Life',\n    link: '/'\n  },\n  {\n    label: 'Auto',\n    link: '/'\n  },\n  {\n    label: 'Property',\n    link: '/'\n  }\n]\n\nfunction Sidebar() {\n  return (\n    <Card className=\"sidebar\">\n      <div className=\"user-info\">\n        <span>Sample Full Name</span>\n        <div className=\"user-type\">\n          <Tag>Admin</Tag>\n          <Tag>Advertiser</Tag>\n          <Tag>Publisher</Tag>\n        </div>\n      </div>\n\n      <div className=\"sidebar-filters\">\n        <span className=\"category-title\">Industries</span>\n          <CustomScrollPane id=\"industries\">\n            {\n              INDUSTRIES.map((industry, key) => (\n                <span key={key}>{ industry.label }</span>\n              ))\n            }\n          </CustomScrollPane>\n        <span className=\"category-title\">Verticals</span>\n          <CustomScrollPane id=\"verticals\">\n            {\n              VERTICALS.map((industry, key) => (\n                <span key={key}>{ industry.label }</span>\n              ))\n            }\n          </CustomScrollPane>\n        <div className=\"campaigns-container\">\n          <span className=\"category-title\">Campaigns</span>\n\n          <div className=\"campaigns\">\n            <Tag>All</Tag>\n            <Tag>Active</Tag>\n            <Tag>InActive</Tag>\n            <Tag>Expiring in 30 days</Tag>\n            <Tag>Don't Expire</Tag>\n            <Tag>All</Tag>\n            <Tag>All</Tag>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"currency-balance\">\n        <Card>\n          <div className=\"body\">\n            <div className=\"graph\">\n              <CircularProgressbar\n                value={10}\n                minValue={0}\n                maxValue={100}\n                styles={{\n                  width: 25,\n                  heigh: 25,\n                  path: {\n                    stroke: 'rgba(255, 115, 115, 100)',\n                    strokeLinecap: 'butt'\n                  }\n                }}\n              />\n            </div>\n            <div className=\"balance\">\n              <span>Current Balance</span>\n\n              <h3>$0</h3>\n\n              <a href=\"/\">Prepay</a>\n            </div>\n          </div>\n\n          <span className=\"message\">Low Credit Alert. Prepay Now</span>\n        </Card>\n      </div>\n    </Card>\n  )\n}\n\nexport default Sidebar;\n","import { Card } from '../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DashboardCard({\n  children,\n  title,\n  className,\n  icons = []\n}) {\n  return (\n    <Card className={className}>\n      <div className=\"card-header\">\n        <span className=\"card-header-title\">\n          { title }\n        </span>\n\n        <div className=\"card-header-actions\">\n          {\n            icons.map((icon, key) => (\n              <FontAwesomeIcon\n                className=\"card-header-icon\"\n                size=\"xs\"\n                icon={icon}\n              />\n            ))\n          }\n        </div>\n      </div>\n\n      {children}\n    </Card>\n  )\n}\n\nexport default DashboardCard;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Line, Doughnut } from 'react-chartjs-2';\n\nimport DashboardCard from '../DashboardCard';\n\nconst SAMPLE_DATA = [\n  {\n    title: '50',\n    value: 50\n  },\n  {\n    title: '25',\n    value: 25\n  },\n  {\n    title: '100',\n    value: 90\n  },\n  {\n    title: '70',\n    value: 70\n  }\n]\n\nfunction KeyMetricsDoughnutChart({ title, data }) {\n  return (\n    <div className=\"doughnut-chart\">\n      <div className=\"doughnut\">\n        <Doughnut\n          data={data}\n          options={{\n            legend: {\n              display: false\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n            rotation: 1 * Math.PI,\n            circumference: 1 * Math.PI\n          }}\n        />\n      </div>\n\n      <span className=\"doughnut-title\">{ title }</span>\n      <div className=\"breakdowns\">\n        <span>$47.00 - MR-PUB-Dev2020</span>\n      </div>\n    </div>\n  )\n}\n\nfunction KeyMetrics() {\n  const [gradient, setGradient] = useState('');\n\n  useEffect(() => {\n    const chart = document.getElementById('key-metrics-line-chart').getContext('2d');\n    var gradient = chart.createLinearGradient(0, 0, 300, 300);\n    gradient.addColorStop(0, '#009348');\n    gradient.addColorStop(1, '#00d4ff');\n\n    setGradient(gradient);\n  }, []);\n\n  return (\n    <DashboardCard\n      className=\"key-metrics\"\n      title=\"Key Metrics\"\n      icons={['info', 'sync-alt', 'cog', 'expand-arrows-alt']}\n    >\n      <div>\n        <Line\n          id=\"key-metrics-line-chart\"\n          height={30}\n          width={100}\n          data={{\n            labels: SAMPLE_DATA.map(data => data.title),\n            datasets: [{\n              fill: 'start',\n              data: SAMPLE_DATA.map(data => data.value),\n              backgroundColor: gradient,\n              borderColor: 'rgba(54, 162, 235, 100)',\n              borderWidth: 5,\n            }]\n          }}\n          options={{\n            legend: {\n              display: false,\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  min: 0,\n                  max: 100,\n                  stepSize: 20\n                }\n              }]\n            }\n          }}\n        />\n      </div>\n\n      <div className=\"ad-spends\">\n        <a href=\"#\">\n          <span>$123.16</span>\n          <p>Sales</p>\n        </a>\n        <a href=\"#\">\n          <span>$73.90</span>\n          <p>CoGS</p>\n        </a>\n        <a href=\"#\">\n          <span>$49.26</span>\n          <p>Margin</p>\n        </a>\n        <a href=\"#\">\n          <span>20</span>\n          <p>Clicks</p>\n        </a>\n        <a href=\"#\">\n          <span>0</span>\n          <p>Impressions</p>\n        </a>\n      </div>\n\n      <div className=\"doughnut-charts\">\n        <KeyMetricsDoughnutChart\n          title=\"Revenue by Unit\"\n          data={{\n            labels: SAMPLE_DATA.map(data => data.title),\n            datasets: [{\n              data: SAMPLE_DATA.map(data => data.value),\n              backgroundColor: 'rgba(255, 115, 115, 100)',\n            }]\n          }}\n        />\n        <KeyMetricsDoughnutChart\n          title=\"Spend by Advertiser\"\n          data={{\n            labels: SAMPLE_DATA.map(data => data.title),\n            datasets: [{\n              data: SAMPLE_DATA.map(data => data.value),\n              backgroundColor: 'rgba(255, 115, 115, 100)',\n            }]\n          }}\n        />\n        <KeyMetricsDoughnutChart\n          title=\"By Industry\"\n          data={{\n            labels: SAMPLE_DATA.map(data => data.title),\n            datasets: [{\n              data: SAMPLE_DATA.map(data => data.value),\n              backgroundColor: 'rgba(255, 115, 115, 100)',\n            }]\n          }}\n        />\n        <KeyMetricsDoughnutChart\n          title=\"By Vertical\"\n          data={{\n            labels: SAMPLE_DATA.map(data => data.title),\n            datasets: [{\n              data: SAMPLE_DATA.map(data => data.value),\n              backgroundColor: 'rgba(255, 115, 115, 100)',\n            }]\n          }}\n        />\n      </div>\n\n      <div className=\"key-metrics-footer\">\n        <span className=\"show-all\">Show All Publishers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Advertisers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Industries <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n        <span className=\"show-all\">Show All Verticals <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" /></span>\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default KeyMetrics;\n","import DashboardCard from '../DashboardCard';\n\nfunction MapView() {\n  return (\n    <DashboardCard\n      className=\"map-view\"\n      title=\"Map View\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n    </DashboardCard>\n  )\n}\n\nexport default MapView;\n","import { Card } from '../../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  description,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className=\"widget\">\n      <span className=\"widget-title\">\n        { title }\n        <div className=\"pmNA\">NA</div>\n      </span>\n\n\n      <div className=\"widget-body\">\n        <span className=\"value\">\n          <span className={positive ? 'positive' : 'negative'}>{ percent }%</span>\n            |\n          <span>${ value }</span>\n        </span>\n\n        <div>\n          <FontAwesomeIcon\n            className={positive ? 'positive' : 'negative'}\n            icon={positive ? 'arrow-alt-circle-up' : 'arrow-alt-circle-down'}\n            size=\"2x\"\n          />\n        </div>\n      </div>\n\n      <span className=\"widget-description\">\n        { description }\n      </span>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction PerformanceMetrics() {\n  return (\n    <DashboardCard\n      className=\"performance-metrics\"\n      title=\"Performance Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"performance-metrics-body\">\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default PerformanceMetrics;\n","import { Card } from '../../../components';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className={classNames('widget', { 'bottom-border-positive': positive, 'bottom-border-negative': !positive })}>\n      <div className=\"widget-title\">\n        <span>{ title }</span>\n\n        <span className={ positive ? 'positive' : 'negative' }>\n          <FontAwesomeIcon icon={ positive ? 'chevron-up' : 'chevron-down' } />\n          { percent }%\n        </span>\n      </div>\n\n      <div className=\"widget-body\">\n        <FontAwesomeIcon\n          className={ positive ? 'positive' : 'negative'}\n          icon={ positive ? 'chevron-up' : 'chevron-down' }\n        />\n        ${ value }\n      </div>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction CampaignMetrics() {\n  return (\n    <DashboardCard\n      className=\"campaign-metrics\"\n      title=\"Campaign Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"campaign-metrics-body\">\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default CampaignMetrics;\n","import Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport KeyMetrics from './key-metrics/KeyMetrics';\nimport MapView from './map-view/MapView';\nimport PerformanceMetrics from './performance-metrics';\nimport CampaignMetrics from './campaign-metrics';\n\nfunction Dashboard() {\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-container\">\n        <Navbar />\n        <Sidebar />\n        <KeyMetrics />\n        <MapView />\n        <PerformanceMetrics />\n        <CampaignMetrics />\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;\n","import Dashboard from './pages/dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/styles.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(fas, far)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}