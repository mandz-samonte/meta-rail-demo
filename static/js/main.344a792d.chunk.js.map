{"version":3,"sources":["reportWebVitals.js","routes/MainRouter.js","components/Card.js","components/Tag.js","components/CustomScrollPane.js","pages/dashboard/Navbar.js","pages/dashboard/Sidebar.js","pages/dashboard/DashboardCard.js","pages/dashboard/key-metrics/DoughnutChart.js","pages/dashboard/key-metrics/LineChart.js","pages/dashboard/key-metrics/KeyMetrics.js","pages/dashboard/map-view/MapView.js","pages/dashboard/performance-metrics/Widget.js","pages/dashboard/performance-metrics/index.js","pages/dashboard/campaign-metrics/Widget.js","pages/dashboard/campaign-metrics/index.js","pages/dashboard/index.js","routes/admin/dashboard.js","routes/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ParentComponents","routes","map","route","key","exact","path","render","url","match","ChildComponents","children","component","MainRouter","Card","className","classNames","Tag","CustomScrollPane","id","useState","value","setValue","setContainer","scroll","panel","document","getElementById","scrollTop","total","scrollHeight","offsetHeight","useEffect","container","input","style","width","right","Math","abs","addEventListener","onChange","e","target","percentage","type","Navbar","date_today","Date","toISOString","slice","last_seven_days","moment","subtract","format","height","color","to","INDUSTRIES","label","link","VERTICALS","Sidebar","industry","minValue","maxValue","styles","heigh","stroke","strokeLinecap","href","DashboardCard","title","icons","icon","size","DoughnutChart","labels","data","breakdowns","handleSelectBreakdown","date","datasets","sales","backgroundColor","hoverBackgroundColor","hoverBorderWidth","options","legend","display","tooltips","enabled","responsive","maintainAspectRatio","rotation","PI","circumference","breakdown","onClick","handleClick","LineChart","fill","borderColor","borderWidth","pointRadius","pointHoverRadius","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","scales","yAxes","ticks","min","max","stepSize","minor","fontColor","gridLines","drawOnChartArea","xAxes","source","time","unit","distribution","SAMPLE_LINE_DATA","startDate","endDate","lastGeneratedDate","dates","currentDate","toDateString","randomDate","getTime","random","push","generateDates","floor","cogs","margin","clicks","impressions","generateValues","entities","values","randomLimit","i","entity","parseFloat","toFixed","KeyMetrics","params","gradient","setGradient","selectedValue","setSelectedValue","publishers","setPublishers","campaigns","setCampaigns","history","useHistory","location","useLocation","query","URLSearchParams","search","setTitle","text","length","charAt","toUpperCase","set","pathname","toString","filter","getContext","createLinearGradient","addColorStop","forEach","setAdSpendTotals","adSpends","toLowerCase","MapView","Widget","description","positive","percent","PerformanceMetrics","CampaignMetrics","Dashboard","props","name","Admin","Routes","library","add","fas","far","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.344a792d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  HashRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n\nfunction ParentComponents({ routes }) {\n  return routes.map((route, key) => (\n    <Route\n      key={key}\n      exact={route.exact}\n      path={route.path}\n      render={({ match: { url }}) => <ChildComponents url={url} routes={route.children} />}\n    />\n  ))\n}\n\nfunction ChildComponents({ routes, url }) {\n  if(url === '/') url = '';\n\n  return routes.map((route, key) => (\n    <Route\n      key={key}\n      exact={route.exact}\n      path={`${url + route.path}`}\n      component={route.component}\n    />\n  ))\n}\n\nfunction MainRouter({ routes }) {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <ParentComponents\n            routes={routes}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default MainRouter;\n","import classNames from 'classnames';\n\nfunction Card({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('card', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Card;\n","import classNames from 'classnames';\n\nfunction Tag({\n  children,\n  className\n}) {\n  return (\n    <div className={classNames('tag', className)}>\n      { children }\n    </div>\n  )\n}\n\nexport default Tag;\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nfunction CustomScrollPane({\n  children,\n  className,\n  id = 'scroll-pane-container',\n}) {\n  const [value, setValue] = useState('');\n  const [container, setContainer] = useState('');\n\n  function onChange(e) {\n    setValue(e.target.value);\n\n    var panel = document.getElementById(id);\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = total * (e.target.value/100);\n\n    panel.scrollTop = percentage;\n  }\n\n  function scroll() {\n    var panel = document.getElementById(id);\n\n    var scrollTop = panel.scrollTop;\n\n    var total = panel.scrollHeight - panel.offsetHeight;\n\n    var percentage = (scrollTop / total) * 100;\n\n    setValue(percentage);\n  }\n\n  useEffect(() => {\n    var container = document.getElementById(`${id}-container`);\n    var panel = document.getElementById(id);\n    var input = document.getElementById(`${id}-scrollbar-input`);\n\n    input.style.width = `${container.offsetHeight}px`;\n    input.style.right = `-${Math.abs(container.offsetHeight / 2 - 25)}px`;\n\n    panel.addEventListener('scroll', scroll);\n\n    setContainer(container);\n    setValue(panel.scrollTop);\n  }, [children]);\n\n  return (\n    <div id={`${id}-container`} className={classNames('custom-scroll-pane', className)}>\n      <div id={id} className=\"scroll-pane-container\">\n        { children }\n      </div>\n\n      <input\n        id={`${id}-scrollbar-input`}\n        onChange={onChange}\n        value={value}\n        className=\"custom-scrollbar\"\n        type=\"range\"\n      />\n    </div>\n  )\n}\n\nexport default CustomScrollPane;\n","import { useState, useEffect } from 'react';\nimport { Card } from '../../components';\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nfunction Navbar() {\n\n  const date_today = new Date().toISOString().slice(0,10);\n\n  const last_seven_days = moment().subtract(7, 'days').format('YYYY-MM-DD');\n\n  return (\n    <div className=\"navbar\">\n      <Card className=\"nav-logo\">\n        <h2>MetaRail</h2>\n        <span>Insights</span>\n\n        <Loader\n          className=\"loader\"\n          type=\"Oval\"\n          width={40}\n          height={40}\n          color=\"#36a2eb\"\n        />\n      </Card>\n\n      <Card className=\"nav-filter\">\n        <Link to={`/admin/dashboard/&date_from=${date_today}&date_to=${date_today}`}>Today</Link>\n        <Link to={`/admin/dashboard/&date_from=${last_seven_days}&date_to=${date_today}`}>Last 7 Days</Link>\n        <Link to=\"/admin/dashboard\">Custom</Link>\n      </Card>\n    </div>\n  )\n}\n\nexport default Navbar;\n","import { Card, Tag, CustomScrollPane } from '../../components';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst INDUSTRIES = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Insurance',\n    link: '/'\n  },\n  {\n    label: 'Travel',\n    link: '/'\n  },\n  {\n    label: 'Education',\n    link: '/'\n  },\n  {\n    label: 'Finance',\n    link: '/'\n  },\n  {\n    label: 'Media & Communications',\n    link: '/'\n  },\n  {\n    label: 'Apparel',\n    link: '/'\n  }\n]\n\nconst VERTICALS = [\n  {\n    label: 'All',\n    link: '/'\n  },\n  {\n    label: 'Health',\n    link: '/'\n  },\n  {\n    label: 'Life',\n    link: '/'\n  },\n  {\n    label: 'Auto',\n    link: '/'\n  },\n  {\n    label: 'Property',\n    link: '/'\n  },\n  {\n    label: 'Property',\n    link: '/'\n  },\n  {\n    label: 'Property',\n    link: '/'\n  }\n]\n\nfunction Sidebar() {\n  return (\n    <Card className=\"sidebar\">\n      <div className=\"user-info\">\n        <span>Sample Full Name</span>\n        <div className=\"user-type\">\n          <Tag>Admin</Tag>\n          <Tag>Advertiser</Tag>\n          <Tag>Publisher</Tag>\n        </div>\n      </div>\n\n      <div className=\"sidebar-filters\">\n        <span className=\"category-title\">Industries</span>\n        <CustomScrollPane id=\"industries\">\n          {\n            INDUSTRIES.map((industry, key) => (\n              <span key={key}>{ industry.label }</span>\n            ))\n          }\n        </CustomScrollPane>\n        <span className=\"category-title\">Verticals</span>\n        <CustomScrollPane id=\"verticals\">\n          {\n            VERTICALS.map((industry, key) => (\n              <span key={key}>{ industry.label }</span>\n            ))\n          }\n        </CustomScrollPane>\n        <div className=\"campaigns-container\">\n          <span className=\"category-title\">Campaigns</span>\n\n          <div className=\"campaigns\">\n            <Tag>All</Tag>\n            <Tag>Active</Tag>\n            <Tag>InActive</Tag>\n            <Tag>Expiring in 30 days</Tag>\n            <Tag>Don't Expire</Tag>\n            <Tag>All</Tag>\n            <Tag>All</Tag>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"currency-balance\">\n        <Card>\n          <div className=\"body\">\n            <div className=\"graph\">\n              <CircularProgressbar\n                value={10}\n                minValue={0}\n                maxValue={100}\n                styles={{\n                  width: 25,\n                  heigh: 25,\n                  path: {\n                    stroke: 'rgba(255, 115, 115, 100)',\n                    strokeLinecap: 'butt'\n                  }\n                }}\n              />\n            </div>\n            <div className=\"balance\">\n              <span>Current Balance</span>\n\n              <h3>$0</h3>\n\n              <a href=\"/\">Prepay</a>\n            </div>\n          </div>\n\n          <span className=\"message\">Low Credit Alert. Prepay Now</span>\n        </Card>\n      </div>\n    </Card>\n  )\n}\n\nexport default Sidebar;\n","import { Card } from '../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction DashboardCard({\n  children,\n  title,\n  className,\n  icons = []\n}) {\n  return (\n    <Card className={className}>\n      <div className=\"card-header\">\n        <span className=\"card-header-title\">\n          { title }\n        </span>\n\n        <div className=\"card-header-actions\">\n          {\n            icons.map((icon, key) => (\n              <FontAwesomeIcon\n                key={key}\n                className=\"card-header-icon\"\n                size=\"xs\"\n                icon={icon}\n              />\n            ))\n          }\n        </div>\n      </div>\n\n      {children}\n    </Card>\n  )\n}\n\nexport default DashboardCard;\n","import { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { CustomScrollPane } from '../../../components';\n\nfunction DoughnutChart({\n  title,\n  labels = [],\n  data = [],\n  breakdowns = [],\n  handleSelectBreakdown,\n  id\n}) {\n  function handleClick(id) {\n    handleSelectBreakdown(id);\n  }\n\n  return (\n    <div className=\"doughnut-chart\">\n      <div className=\"doughnut\">\n        <Doughnut\n          data={{\n            labels: labels.map(data => data.date),\n            datasets: [{\n              data: data.map(data => data.sales),\n              backgroundColor: 'rgba(255, 115, 115, 0.5)',\n              hoverBackgroundColor: 'rgba(255, 115, 115, 1)',\n              hoverBorderWidth: 0,\n            }]\n          }}\n          options={{\n            legend: {\n              display: false\n            },\n            tooltips: {\n              enabled: false,\n            },\n            responsive: true,\n            maintainAspectRatio: false,\n            rotation: 1 * Math.PI,\n            circumference: 1 * Math.PI\n          }}\n        />\n      </div>\n\n      <span className=\"doughnut-title\">{ title }</span>\n      <CustomScrollPane id={id} className=\"breakdowns\">\n        {\n          breakdowns.map((breakdown, key) => (\n            <span\n              key={key}\n              onClick={() => handleClick(breakdown.id)}\n            >\n              { breakdown.value } - { breakdown.id }\n            </span>\n          ))\n        }\n      </CustomScrollPane>\n    </div>\n  )\n}\n\nexport default DoughnutChart;\n","import { Line } from 'react-chartjs-2';\n\nfunction LineChart({\n  labels,\n  data,\n  color\n}) {\n  return (\n    <Line\n      id=\"key-metrics-line-chart\"\n      height={25}\n      width={100}\n      data={{\n        labels: labels,\n        datasets: [{\n          fill: 'start',\n          data: data,\n          backgroundColor: color,\n          borderColor: 'rgba(54, 162, 235, 100)',\n          borderWidth: 5,\n          pointRadius: 10,\n          pointHoverRadius: 10,\n          pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n          pointBorderColor: 'rgba(0, 0, 0, 0)',\n          pointHoverBackgroundColor: color\n        }]\n      }}\n      options={{\n        legend: {\n          display: false,\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 100,\n              stepSize: 20,\n              minor: {\n                fontColor: '#d6d6d6'\n              }\n            },\n            gridLines: {\n              drawOnChartArea: false,\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              source: 'labels',\n              minor: {\n                fontColor: '#d6d6d6'\n              }\n            },\n            type: 'time',\n            time: {\n              unit: 'day',\n            },\n            distribution: 'series',\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }}\n    />\n  )\n}\n\nexport default LineChart;\n","import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport moment from 'moment';\n\nimport DashboardCard from '../DashboardCard';\nimport DoughnutChart from './DoughnutChart';\nimport LineChart from './LineChart';\n\nconst SAMPLE_LINE_DATA = generateDates(new Date(moment().subtract(30, 'days').format('YYYY-MM-DD')), new Date()).map((date) => {\n  return {\n    date: date,\n    sales: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    cogs: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    margin: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    clicks: Math.floor(Math.random() * (100 - 1 + 1) + 1),\n    impressions: Math.floor(Math.random() * (100 - 1 + 1) + 1)\n  }\n})\n\nfunction generateValues(entities) {\n  let values = [];\n\n  let total = 0.00;\n  let randomLimit = Math.floor(Math.random() * (6 - 1) + 1);\n\n  for(let i = 0; i < randomLimit; i++) values.push({\n    id: i,\n    entity: entities[1],\n    value: parseFloat(Math.floor(Math.random() * (500 - 1 + 1) + 1 ).toFixed(2))\n  });\n\n  for(let i = 0; i < randomLimit; i++) total += parseFloat(values[i].value.toFixed(2));\n\n  return [\n    {\n      id: 'random-1',\n      entity: entities[0],\n      value: total,\n      breakdowns: values\n    }\n  ]\n}\n\nfunction generateDates(startDate, endDate) {\n  let dates = [];\n  let currentDate = startDate;\n  let lastGeneratedDate;\n\n  while(new Date(currentDate).toDateString() !== new Date(endDate).toDateString()) {\n    let randomDate = new Date(currentDate.getTime() + Math.random() * (endDate.getTime() - currentDate.getTime()));\n\n    if(new Date(randomDate).toDateString() !== new Date(lastGeneratedDate).toDateString()) {\n      dates.push(randomDate);\n    }\n\n    currentDate = randomDate;\n    lastGeneratedDate = randomDate\n  }\n\n  return dates;\n}\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction KeyMetrics({ params }) {\n  const [gradient, setGradient] = useState('');\n  const [selectedValue, setSelectedValue] = useState('sales');\n  const [publishers, setPublishers] = useState([]);\n  const [campaigns, setCampaigns] = useState([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  const query = useQuery();\n\n  function setAdSpendTotals() {\n    let values = [\n      {\n        label: 'Sales',\n        total: 0\n      },\n      {\n        label: 'CoGS',\n        total: 0\n      },\n      {\n        label: 'Margin',\n        total: 0\n      },\n      {\n        label: 'Clicks',\n        total: 0\n      },\n      {\n        label: 'Impressions',\n        total: 0\n      }\n    ]\n\n    SAMPLE_LINE_DATA.forEach(data => {\n      values[0].total += data.sales;\n      values[1].total += data.cogs;\n      values[2].total += data.margin;\n      values[3].total += data.clicks;\n      values[4].total += data.impressions;\n    })\n\n    return values;\n  }\n\n  function setTitle(text, breakdown) {\n    if(!breakdown || !breakdown.length) return\n\n    return `${text} ${ breakdown[0].entity && breakdown[0].entity.charAt(0).toUpperCase() + breakdown[0].entity.slice(1)}`;\n  }\n\n  function handleSelectBreakdown(breakdowns, id, set) {\n    query.set('entity_id', id)\n    query.set('entity', 'publisher')\n\n    history.push(`${location.pathname}?${query.toString()}`)\n\n    let breakdown = breakdowns.filter(breakdown => breakdown.id === id)\n\n    breakdown[0].breakdowns\n      ? set(breakdown[0].breakdowns)\n      : set(breakdown)\n\n    setTitle(breakdown.entity);\n  }\n\n  useEffect(() => {\n    const chart = document.getElementById('key-metrics-line-chart').getContext('2d');\n    var gradient = chart.createLinearGradient(0, 0, 300, 300);\n    gradient.addColorStop(0, '#009348');\n    gradient.addColorStop(1, '#00d4ff');\n\n    setGradient(gradient);\n\n    setPublishers(generateValues(['publisher', 'units']));\n    setCampaigns(generateValues(['campaigns', 'placements']));\n  }, []);\n\n  return (\n    <DashboardCard\n      className=\"key-metrics\"\n      title=\"Key Metrics\"\n      icons={['info', 'sync-alt', 'cog', 'expand-arrows-alt']}\n    >\n      <LineChart\n        labels={SAMPLE_LINE_DATA.map(data => data.date)}\n        data={SAMPLE_LINE_DATA.map(data => data[selectedValue])}\n        color={gradient}\n      />\n\n      <div className=\"ad-spends\">\n        {\n          setAdSpendTotals().map((adSpends, key) => (\n            <span\n              key={key}\n              className=\"ad-spend\"\n              onClick={() => setSelectedValue(adSpends.label.toLowerCase())}\n            >\n              <span>{ key < 3 && '$'}{adSpends.total}</span>\n              <p>{adSpends.label}</p>\n            </span>\n          ))\n        }\n      </div>\n\n      <div className=\"doughnut-charts\">\n        <DoughnutChart\n          title={setTitle('Revenue by', publishers)}\n          id=\"publisher\"\n          data={SAMPLE_LINE_DATA}\n          breakdowns={publishers}\n          handleSelectBreakdown={(id) => handleSelectBreakdown(publishers, id, setPublishers)}\n        />\n        <DoughnutChart\n          title={setTitle('Spend by', campaigns)}\n          id=\"advertiser\"\n          data={SAMPLE_LINE_DATA}\n          breakdowns={campaigns}\n          handleSelectBreakdown={(id) => handleSelectBreakdown(campaigns, id, setCampaigns)}\n        />\n        <DoughnutChart\n          title=\"By Industries\"\n          id=\"industry\"\n          data={SAMPLE_LINE_DATA}\n        />\n        <DoughnutChart\n          title=\"By Vertical\"\n          id=\"vertical\"\n          data={SAMPLE_LINE_DATA}\n        />\n      </div>\n\n      <div className=\"key-metrics-footer\">\n        <span className=\"show-all\">\n            Show All Publishers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" />\n        </span>\n        <span className=\"show-all\">\n          Show All Advertisers <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" />\n        </span>\n        <span className=\"show-all\">\n          Show All Industries <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" />\n        </span>\n        <span className=\"show-all\">\n          Show All Verticals <FontAwesomeIcon icon=\"caret-down\" size=\"lg\" />\n        </span>\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default KeyMetrics;\n","import DashboardCard from '../DashboardCard';\n\nfunction MapView() {\n  return (\n    <DashboardCard\n      className=\"map-view\"\n      title=\"Map View\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n    </DashboardCard>\n  )\n}\n\nexport default MapView;\n","import { Card } from '../../../components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  description,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className=\"widget\">\n      <span className=\"widget-title\">\n        { title }\n        <div className=\"pmNA\">NA</div>\n      </span>\n\n\n      <div className=\"widget-body\">\n        <span className=\"value\">\n          <span className={positive ? 'positive' : 'negative'}>{ percent }%</span>\n            |\n          <span>${ value }</span>\n        </span>\n\n        <div>\n          <FontAwesomeIcon\n            className={positive ? 'positive' : 'negative'}\n            icon={positive ? 'arrow-alt-circle-up' : 'arrow-alt-circle-down'}\n            size=\"2x\"\n          />\n        </div>\n      </div>\n\n      <span className=\"widget-description\">\n        { description }\n      </span>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction PerformanceMetrics() {\n  return (\n    <DashboardCard\n      className=\"performance-metrics\"\n      title=\"Performance Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"performance-metrics-body\">\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n        <Widget\n          title=\"ROAS\"\n          description=\"Return on Ad Spend\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default PerformanceMetrics;\n","import { Card } from '../../../components';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Widget({\n  title,\n  positive = false,\n  percent = '00.00',\n  value = '00.00'\n}) {\n  return (\n    <Card className={classNames('widget', { 'bottom-border-positive': positive, 'bottom-border-negative': !positive })}>\n      <div className=\"widget-title\">\n        <span>{ title }</span>\n\n        <span className={ positive ? 'positive' : 'negative' }>\n          <FontAwesomeIcon icon={ positive ? 'chevron-up' : 'chevron-down' } />\n          { percent }%\n        </span>\n      </div>\n\n      <div className=\"widget-body\">\n        <FontAwesomeIcon\n          className={ positive ? 'positive' : 'negative'}\n          icon={ positive ? 'chevron-up' : 'chevron-down' }\n        />\n        ${ value }\n      </div>\n    </Card>\n  )\n}\n\nexport default Widget;\n","import DashboardCard from '../DashboardCard';\n\nimport Widget from './Widget';\n\nfunction CampaignMetrics() {\n  return (\n    <DashboardCard\n      className=\"campaign-metrics\"\n      title=\"Campaign Metrics\"\n      icons={['info', 'expand-arrows-alt']}\n    >\n      <div className=\"campaign-metrics-body\">\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n        <Widget\n          title=\"eCPC\"\n        />\n      </div>\n    </DashboardCard>\n  )\n}\n\nexport default CampaignMetrics;\n","import Navbar from './Navbar';\nimport Sidebar from './Sidebar';\nimport KeyMetrics from './key-metrics/KeyMetrics';\nimport MapView from './map-view/MapView';\nimport PerformanceMetrics from './performance-metrics';\nimport CampaignMetrics from './campaign-metrics';\n\nfunction Dashboard({ match }) {\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-container\">\n        <Navbar />\n        <Sidebar />\n        <KeyMetrics\n          params={match.params}\n        />\n        <MapView />\n        <PerformanceMetrics />\n        <CampaignMetrics />\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;\n","import Dashboard from '../../pages/dashboard';\n\nconst routes = () => {\n  return [\n    {\n      path: '/dashboard',\n      exact: true,\n      component: (props) => <Dashboard {...props} />\n    },\n    {\n      path: '/dashboard:slug',\n      exact: true,\n      component: (props) => <Dashboard {...props} />\n    }\n  ]\n}\n\nexport default routes;\n","import MainRouter from './MainRouter';\n\nimport * as Admin from './admin';\n\nconst routes = [\n  {\n    name: 'main',\n    path: '/',\n    children: []\n  },\n  {\n    name: 'admin',\n    path: '/admin',\n    children: [\n      ...Admin.Dashboard(),\n    ]\n  }\n]\n\nconst Routes = () => <MainRouter routes={routes} />\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/styles.scss';\nimport reportWebVitals from './reportWebVitals';\n\nimport MainRouter from './routes';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\n\nlibrary.add(fas, far)\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}